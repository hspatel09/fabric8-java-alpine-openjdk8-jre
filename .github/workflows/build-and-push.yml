name: build-and-push

on:
  workflow_dispatch:
    inputs:
      registryAddress:
        description: 'Registry Address'
        required: true
      registryUsername:
        description: 'Registry Username'
        required: true
      registryPassword:
        description: 'Registry Password'
        required: true
      dockerImageName:
        description: 'Docker Image Name'
        required: true
      dockerImageTag:
        description: 'Docker Image Tag'
        required: true

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=${{ github.event.inputs.registryAddress }}/${{ github.event.inputs.dockerImageName }}
          DOCKER_PLATFORMS=linux/amd64,linux/arm64
          TAG_NAME=${{ github.event.inputs.dockerImageTag }}
          DOCKER_IMAGE_TAGS="--tag ${DOCKER_IMAGE}:${TAG_NAME} --tag ${DOCKER_IMAGE}:latest"
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${TAG_NAME}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg VERSION=${TAG_NAME} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg VCS_REF=${GITHUB_SHA::8} \
            ${DOCKER_IMAGE_TAGS} .
      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v3
      - name: Docker Buildx (build)
        run: |
          docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}
      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ github.event.inputs.registryAddress }}
          username: ${{ github.event.inputs.registryUsername }}
          password: ${{ github.event.inputs.registryPassword }}
      - name: Docker Buildx (push)
        run: |
          docker buildx build --output "type=image,push=true" ${{ steps.prepare.outputs.buildx_args }}